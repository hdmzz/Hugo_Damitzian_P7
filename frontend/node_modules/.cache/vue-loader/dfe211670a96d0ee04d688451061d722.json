{"remainingRequest":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/testtest/Desktop/P7-Groupomania/frontend/src/components/Posts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/src/components/Posts.vue","mtime":1620038819000},{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBDcmVhdGVQb3N0IGZyb20gJy4vQ3JlYXRlUG9zdCc7CmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdwb3N0cycsCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgQ3JlYXRlUG9zdDogQ3JlYXRlUG9zdAogICAgfSwKICAgIGRhdGEoKXsKICAgICAgICByZXR1cm57CiAgICAgICAgICAgIHBvc3RzOiBbXSwKICAgICAgICAgICAgdXNlcklkOiBudWxsLAogICAgICAgICAgICBpc2FkbWluOiAwLAogICAgICAgICAgICBlcnJvcjogJycsCiAgICAgICAgICAgIGFkbWluRGx0Um91dGU6ICdodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpL2FkbWluLycsCiAgICAgICAgICAgIHVzZXJEbHRSb3V0ZTogJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvcG9zdC8nLAogICAgICAgICAgICB0b2tlbjogJycKICAgICAgICB9CiAgICB9LAogICAgY3JlYXRlZCgpewogICAgICAgIGNvbnNvbGUubG9nKCdjcmVhdGVkJykKICAgICAgICB0aGlzLnRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJyk7CiAgICAgICAgdGhpcy51c2VySWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlcklkJyk7CiAgICAgICAgdGhpcy5pc2FkbWluID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2lzYWRtaW4nKTsKICAgICAgICB0aGlzLmdldFBvc3RzKCk7ICAgICAgIAogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBnZXRQb3N0cygpIHsKICAgICAgICAgICAgLy9lbnZveWVyIHVuZSByZXF1w6p0ZSBwb3VyIHLDqWN1cMOpcmVyIGxlcyBwb3N0cyBhdmVjIGxlIGJlYXJlciB0b2tlbgogICAgICAgICAgICBmZXRjaCgiaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9wb3N0L2dldFBvc3RzIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaGVhZGVyczogCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgYXV0aG9yaXphdGlvbiA6ICdCZWFyZXIgJyArIHRoaXMudG9rZW4KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgICBpZihyZXNwb25zZS5zdGF0dXMgPT0gNDAzKXsKICAgICAgICAgICAgICAgICAgICBhbGVydCgiVm91cyDDqnRlcyBjb25uZWN0w6kgZGVwdWlzIHBsdXMgZGUgOCBoZXVyZXMsIHZvdXMgZGV2ZXogdm91cyByZWNvbm5lY3RlciIpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gcmVzcG9uc2UuanNvbigpOwogICAgICAgICAgICAgICAgcmV0dXJuIGRhdGEKICAgICAgICAgICAgfSkudGhlbihkYXRhID0+IHsKICAgICAgICAgICAgICAgIHRoaXMucG9zdHMgPSBkYXRhCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBkZWxldGVQb3N0KGlkLCB1cmwpIHsKICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy50b2tlbisnZGVsZXRlcG9zdCcpOwogICAgICAgICAgICBmZXRjaCh1cmwgKyBpZCwgewogICAgICAgICAgICAgICAgbWV0aG9kOiAnZGVsZXRlJywKICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICBhdXRob3JpemF0aW9uIDogJ0JlYXJlciAnICsgdGhpcy50b2tlbgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzCiAgICAgICAgICAgIH0pLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgIGlmIChyZXMuc3RhdHVzID09IDQwMSl7CiAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ1ZvdXMgbmUgcG91dmV6IHBhcyBzdXBwcmltZXIgY2UgcG9zdCcpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZihyZXMuc3RhdHVzID09IDIwMCl7CiAgICAgICAgICAgICAgICBkb2N1bWVudC5sb2NhdGlvbi5yZWxvYWQoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["Posts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Posts.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"container\">\n        <div id=\"posts\">\n            <div id=\"postsContainer\">\n                <div class=\"card\">\n                    <CreatePost @postsent=\"getPosts\"/>\n                </div>\n                <div v-if=\"posts==''\" id=\"emptyPosts\">\n                    <p>Pas encore de post</p>\n                </div>\n                <div v-for=\"post in posts\" :key=\"post.post_id\" class=\"card\">\n                        <div id=\"head\"><p>{{post.firstName}} {{post.lastName}} a écrit :</p></div>\n                        <router-link :to=\"{name: 'post', params: {id: post.post_id}}\">\n                            <div id=\"body\"><p>{{post.comment}}</p></div>\n                            <div v-if=\"post.imageurl\">\n                                <img :src=\"post.imageurl\" alt=\"image du post\">\n                            </div>\n                        </router-link>\n                    <button v-if=\"userId == post.id\" @click=\"deletePost(post.post_id, userDltRoute)\" class=\"deleteBtn\"><i class=\"fas fa-trash-alt\"></i></button>\n                    <button v-if=\"isadmin == 1\" @click=\"deletePost(post.post_id, adminDltRoute)\" class=\"adminDelete\">Modérer ce post</button>\n                </div>\n            </div> \n        </div>\n    </div>\n</template>\n\n<script>\nimport CreatePost from './CreatePost';\nexport default {\n    name: 'posts',\n    components: {\n        CreatePost: CreatePost\n    },\n    data(){\n        return{\n            posts: [],\n            userId: null,\n            isadmin: 0,\n            error: '',\n            adminDltRoute: 'http://localhost:3000/api/admin/',\n            userDltRoute: 'http://localhost:3000/api/post/',\n            token: ''\n        }\n    },\n    created(){\n        console.log('created')\n        this.token = localStorage.getItem('token');\n        this.userId = localStorage.getItem('userId');\n        this.isadmin = localStorage.getItem('isadmin');\n        this.getPosts();       \n    },\n    methods: {\n        getPosts() {\n            //envoyer une requête pour récupérer les posts avec le bearer token\n            fetch(\"http://localhost:3000/api/post/getPosts\",\n            {\n                headers: \n                {\n                    authorization : 'Bearer ' + this.token\n                }\n            }).then(response => {\n                if(response.status == 403){\n                    alert(\"Vous êtes connecté depuis plus de 8 heures, vous devez vous reconnecter\")\n                }\n                const data = response.json();\n                return data\n            }).then(data => {\n                this.posts = data\n            })\n        },\n        deletePost(id, url) {\n            console.log(this.token+'deletepost');\n            fetch(url + id, {\n                method: 'delete',\n                headers: {\n                    authorization : 'Bearer ' + this.token\n                }\n            }).then(res => {\n                return res\n            }).then(res => {\n                if (res.status == 401){\n                    alert('Vous ne pouvez pas supprimer ce post')\n                }\n                if(res.status == 200){\n                document.location.reload();\n                }\n            })\n        }\n    }\n}\n</script>\n<style lang=\"scss\" scoped>\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200&display=swap');\n#titleForum{\n    width: 40%;\n    margin-left: auto;\n    margin-right: auto;\n}\na{\n    text-decoration: none;\n    color: black;\n}\nh1{\n    font-family: 'Poppins';\n}\n\n#postsContainer{\n    width: 40%;\n    margin-right: auto;\n    margin-left: auto;\n}\n#emptyPosts{\n    text-align: center;\n    margin-top: 20vh;\n}\n#container{\n    width: 100%;\n}\n\n.card{\n    padding: 1rem;\n    background-color: white;\n    box-shadow: 0px 0px 10px rgb(110, 107, 107);\n    margin-top: 20px;\n    border-radius: 1rem;\n    img{\n        max-height: 50%;\n        max-width: 100%;\n    }\n}\n#head, #body{\n    text-align: start;\n}\n\n#head{\n    font-family: franklin Gothic, Arial Bold\n}\n.adminDelete{\n    background-color:crimson;\n    color: whitesmoke;\n}\n.deleteBtn{\n    width: fit-content;\n}\n\n//responsive\n@media screen and (min-width: 200px) and (max-width: 900px) {\n    #postsContainer{\n        width: 90%;\n    }\n    .card{\n        border-radius: 0;\n    }\n}\n</style>"]}]}
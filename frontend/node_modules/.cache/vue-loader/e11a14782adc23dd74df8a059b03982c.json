{"remainingRequest":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/testtest/Desktop/P7-Groupomania/frontend/src/components/Connexion.vue?vue&type=style&index=0&id=01487b6e&lang=scss&scoped=true&","dependencies":[{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/src/components/Connexion.vue","mtime":1620038819000},{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2NvbnRhaW5lcnsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBoZWlnaHQ6IDEwMHZoOwp9Ci5saWduZUZvcm17CiAgICBtYXJnaW46IDFyZW07Cn0KI2xvZ297CiAgICBpbWd7CiAgICAgICAgaGVpZ2h0OiAxMDAlOwogICAgICAgIHdpZHRoOiAyNSU7CiAgICB9Cn0KCiNjb25uZXhpb25Db250YWluZXJ7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsKICAgIHdpZHRoOiA1MCU7CiAgICBtYXJnaW46IGF1dG87CiAgICB9Cg=="},{"version":3,"sources":["Connexion.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Connexion.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"container\">\n        <div id=\"connexionContainer\">\n            <div id=\"logo\">\n                <img src=\"../assets/logo/icon.svg\" alt=\"logo de groupomania\">\n            </div>\n            <p>Pas encore inscrit ? <a href=\"/\">Inscrivez-vous</a></p>\n            <form id=\"form\" class=\"m-4\" method=\"POST\" @submit.prevent=\"connexion\">\n                <div class=\"form-row\">\n                    <div class=\"ligneForm\">\n                        <label for=\"email\">Adresse mail :</label>\n                        <input type=\"email\" name=\"email\" v-model=\"email\" class=\"form-control\" required>\n                    </div>\n                    <div class=\"ligneForm\">\n                        <label for=\"password\">Mot de passe :</label>\n                        <input type=\"password\" name=\"password\" v-model=\"password\" class=\"form-control\" required>\n                    </div>\n                </div>\n                <input id=\"formButton\" type=\"submit\" value=\"Connexion\" class=\"btnSend\">\n            </form>\n            <p v-if=\"error\">{{error}}</p>\n        </div>\n    </div>\n</template>\n<script>\nimport router from '../router/index'; \nexport default {\n    name: 'connect',\n    data() {\n        return{\n            error: null,\n            result: null,\n            email:'',\n            password:''\n        };\n    },\n    methods: {\n        connexion() {\n            fetch(\"http://localhost:3000/api/users/connexion\",{\n                method: 'POST',\n                headers: \n                {\n                    'Content-Type' : 'application/json'\n                },\n                body: JSON.stringify({\n                    email: this.email,\n                    password: this.password\n                })\n            })\n            .then(response => {\n                if(response.status == 401){\n                    this.error = \"mot de passe incorrect\" + response.statusText\n                }\n                const result = response.json()\n                return result\n            }) \n            .then(result => {\n                this.result = result\n                console.log(result.token)\n                if(result.token == undefined){\n                    alert('email ou mot de passe incorect');\n                } else {\n                localStorage.setItem('token', result.token)\n                localStorage.setItem('userId', result.userId)\n                localStorage.setItem('isadmin', result.isadmin)\n                router.push('/posts')\n                }\n            }) \n            .catch(error => console.log(error));\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n#container{\n    display: flex;\n    height: 100vh;\n}\n.ligneForm{\n    margin: 1rem;\n}\n#logo{\n    img{\n        height: 100%;\n        width: 25%;\n    }\n}\n\n#connexionContainer{\n    text-align: center;\n    background-color: white;\n    width: 50%;\n    margin: auto;\n    }\n</style>"]}]}
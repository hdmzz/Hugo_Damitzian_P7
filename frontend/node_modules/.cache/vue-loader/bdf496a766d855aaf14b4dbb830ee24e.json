{"remainingRequest":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/testtest/Desktop/P7-Groupomania/frontend/src/views/Post.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/src/views/Post.vue","mtime":1620038819000},{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBIZWFkZXIgZnJvbSAnLi4vY29tcG9uZW50cy9IZWFkZXInOwppbXBvcnQgQWRkQ29tbWVudCBmcm9tICcuLi9jb21wb25lbnRzL0FkZENvbW1lbnQnOwpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnUG9zdFZ1ZScsCiAgICBwcm9wczogWydpZCddLAogICAgY29tcG9uZW50czogewogICAgICAgIEhlYWRlcjogSGVhZGVyLAogICAgICAgIEFkZENvbW1lbnQ6IEFkZENvbW1lbnQKICAgIH0sCiAgICBkYXRhKCl7CiAgICAgICAgcmV0dXJuewogICAgICAgICAgICBwb3N0OiB7fSwKICAgICAgICAgICAgZGF0YTogbnVsbCwKICAgICAgICAgICAgdG9rZW46IG51bGwsCiAgICAgICAgICAgIHVzZXJJZDogbnVsbAogICAgICAgIH0KICAgIH0sCiAgICBjcmVhdGVkKCl7CiAgICAgICAgdGhpcy5pc2FkbWluID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2lzYWRtaW4nKTsKICAgICAgICB0aGlzLnVzZXJJZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VySWQnKQogICAgICAgIHRoaXMudG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKTsKICAgICAgICB0aGlzLnVzZXJJZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VySWQnKTsKICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5wb3N0SWQgPSB0aGlzLmlkOyAgIAogICAgICAgIHRoaXMuZ2V0UG9zdCh0aGlzLmlkKSAKICAgICAgICB0aGlzLmdldENvbW1lbnRzKCkKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgYXN5bmMgZ2V0UG9zdChpZCkgewogICAgICAgICAgICBjb25zb2xlLmxvZygnZ2V0UG9zdHMnKQogICAgICAgICAgICAvL2Vudm95ZXIgdW5lIHJlcXXDqnRlIHBvdXIgcsOpY3Vww6lyZXIgbGVzIHBvc3RzIGF2ZWMgbGUgYmVhcmVyIHRva2VuCiAgICAgICAgICAgIGZldGNoKCJodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpL3Bvc3QvZ2V0T25lUG9zdC8iKyBpZCwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaGVhZGVyczogCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgYXV0aG9yaXphdGlvbiA6ICdCZWFyZXIgJyArIHRoaXMudG9rZW4KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gcmVzcG9uc2UuanNvbigpOwogICAgICAgICAgICAgICAgcmV0dXJuIGRhdGEKICAgICAgICAgICAgfSkudGhlbihkYXRhID0+IHsKICAgICAgICAgICAgICAgIHRoaXMucG9zdCA9IGRhdGEucmVzdWx0WzBdCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcikKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIGFzeW5jIGdldENvbW1lbnRzKCl7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdnZXRDb21tZW50cyBydW5uaW5nJykKICAgICAgICAgICAgYXdhaXQgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvY29tbWVudC9nZXRDb21tZW50cy8nICsgdGhpcy5pZCwgewogICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgIGF1dGhvcml6YXRpb246ICdCZWFyZXIgJyArIHRoaXMudG9rZW4KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgICAgLnRoZW4ocmVzID0+IHJlcy5qc29uKCkpCiAgICAgICAgICAgIC50aGVuKGRhdGEgPT4gdGhpcy5kYXRhID0gZGF0YS5yZXN1bHQpCiAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmxvZyhlcnJvcikpOwogICAgICAgIH0sCiAgICAgICAgYXN5bmMgZGVsZXRlQ29tbWVudChjb21tZW50SWQsIHVybCl7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdkZWxldGUgY29tbWVudCcgKyAnICcrIChjb21tZW50SWQpKQogICAgICAgICAgICBjb25zb2xlLmxvZyh1cmwpCiAgICAgICAgICAgIGF3YWl0IGZldGNoKHVybCArIGNvbW1lbnRJZCwgCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIG1ldGhvZDogJ2RlbGV0ZScsCiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgYXV0aG9yaXphdGlvbiA6ICdCZWFyZXIgJyArIHRoaXMudG9rZW4KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgICAgLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgIHJldHVybiByZXMKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICBpZiAocmVzLnN0YXR1cyA9PSA0MDEpewogICAgICAgICAgICAgICAgICAgIGFsZXJ0KCdWb3VzIG5lIHBvdXZleiBwYXMgc3VwcHJpbWVyIGNlIHBvc3QnKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaWYocmVzLnN0YXR1cyA9PSAyMDApewogICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0Q29tbWVudHMoKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4gewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpCiAgICAgICAgICAgIH0pCiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["Post.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Post.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div id=\"onePost\">\n        <Header/>\n        <div id=\"post\">\n            <div id=\"postContainer\">\n                <div id=\"card\">\n                    <div id=\"head\">\n                        <p>{{post.firstName}} {{post.lastName}} a écrit :</p>\n                    </div>\n                    <div id=\"body\">\n                        <p>{{post.comment}}</p>\n                    </div>\n                    <div v-if=\"post.imageurl\">\n                        <img :src=\"post.imageurl\" alt=\"image du post\">\n                    </div>\n                    <div id=\"comment\">\n                        <AddComment @commentsent=\"getComments\"/>\n                        <div id=\"commentSection\">\n                            <p v-if=\"data == ''\">Pas encore de commentaires</p>\n                            <div v-for=\"comment in data\" :key=\"comment.commentId\" id=\"comments\">\n                                <div id=\"head\">\n                                    <p>{{comment.firstName}} {{comment.lastName}} à écrit:</p>\n                                </div>\n                                <div>\n                                    <p>{{comment.comment}}</p>\n                                </div>\n                                <button v-if=\"userId == comment.userId\" @click=\"deleteComment(comment.commentId, $store.state.userCmtDlt)\" class=\"deleteBtn\"><i class=\"fas fa-trash-alt\"></i></button>\n                                <button v-if=\"isadmin == 1\" @click=\"deleteComment(comment.commentId, $store.state.adminCmtDlt)\" class=\"adminDelete\">Modérer ce post</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div> \n        </div>\n    </div>\n</template>\n\n<script>\nimport Header from '../components/Header';\nimport AddComment from '../components/AddComment';\nexport default {\n    name: 'PostVue',\n    props: ['id'],\n    components: {\n        Header: Header,\n        AddComment: AddComment\n    },\n    data(){\n        return{\n            post: {},\n            data: null,\n            token: null,\n            userId: null\n        }\n    },\n    created(){\n        this.isadmin = localStorage.getItem('isadmin');\n        this.userId = localStorage.getItem('userId')\n        this.token = localStorage.getItem('token');\n        this.userId = localStorage.getItem('userId');\n        this.$store.state.postId = this.id;   \n        this.getPost(this.id) \n        this.getComments()\n    },\n    methods: {\n        async getPost(id) {\n            console.log('getPosts')\n            //envoyer une requête pour récupérer les posts avec le bearer token\n            fetch(\"http://localhost:3000/api/post/getOnePost/\"+ id,\n            {\n                headers: \n                {\n                    authorization : 'Bearer ' + this.token\n                }\n            }).then(response => {\n                const data = response.json();\n                return data\n            }).then(data => {\n                this.post = data.result[0]\n            })\n            .catch(error => {\n                console.log(error)\n            })\n        },\n        async getComments(){\n            console.log('getComments running')\n            await fetch('http://localhost:3000/api/comment/getComments/' + this.id, {\n                headers: {\n                    authorization: 'Bearer ' + this.token\n                }\n            })\n            .then(res => res.json())\n            .then(data => this.data = data.result)\n            .catch(error => console.log(error));\n        },\n        async deleteComment(commentId, url){\n            console.log('delete comment' + ' '+ (commentId))\n            console.log(url)\n            await fetch(url + commentId, \n            {\n                method: 'delete',\n                headers: {\n                    authorization : 'Bearer ' + this.token\n                }\n            })\n            .then(res => {\n                return res\n                })\n            .then(res => {\n                if (res.status == 401){\n                    alert('Vous ne pouvez pas supprimer ce post')\n                }\n                if(res.status == 200){\n                    this.getComments()\n                }\n            })\n            .catch(error => {\n                console.log(error)\n            })\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n#onePost{\n    width: 100%;\n}\n#post{\n    margin: 2rem;\n}\n#postContainer{\n    width: 50%;\n    margin-right: auto;\n    margin-left: auto;\n}\n#card{\n    padding: 1rem;\n    background-color: white;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    border-radius: 1rem;\n    box-shadow: 0px 0px 10px rgb(110, 107, 107);\n    img{\n        max-height: 50%;\n        max-width: 100%;\n    }\n}\n#addComment{\n    padding: 1rem;\n}\nbutton{\n    width: fit-content; \n    border: none;\n    color: black;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n}\n#comment{\n    padding: 1rem;\n    background-color: #F8F8FF;\n}\n#commentSection{\n    background-color: #eeeeee;\n    border-radius: 1rem;\n    padding: 1rem;\n    margin: 1rem;\n    #comments{\n        background-color: white;\n        border-radius: 1rem;\n        padding: 1rem;\n        margin: 10px;\n    }\n}\n\n//responsive\n@media screen and (min-width: 200px) and (max-width: 900px) {\n    #postContainer{\n        width: 90%;\n    }\n    #card{\n        border-radius: 0;\n    }\n    #comment{\n        text-align: center;\n    }\n}\n</style>\n"]}]}
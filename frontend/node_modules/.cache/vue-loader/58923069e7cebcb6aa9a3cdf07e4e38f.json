{"remainingRequest":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/testtest/Desktop/P7-Groupomania/frontend/src/components/AddComment.vue?vue&type=style&index=0&id=5792f1ae&lang=scss&scoped=true&","dependencies":[{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/src/components/AddComment.vue","mtime":1620038819000},{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/testtest/Desktop/P7-Groupomania/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNhZGRDb21tZW50ewogICAgZGlzcGxheTogZmxleDsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKfQpmb3JtewogICAgd2lkdGg6IDEwMCU7Cn0KI2NvbUlucHV0ewogICAgd2lkdGg6IDcwJTsKICAgIG1hcmdpbi1yaWdodDogMXJlbTsKfQojc2VuZEJ0bnsKICAgIHdpZHRoOiBmaXQtY29udGVudDsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJhY2tncm91bmQtY29sb3I6IGRvZGdlcmJsdWU7CiAgICBib3JkZXItcmFkaXVzOiAxcmVtOwogICAgY29sb3I6IHdoaXRlOwogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgcGFkZGluZzogN3B4Owp9CkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDIwMHB4KSBhbmQgKG1heC13aWR0aDogOTAwcHgpIHsKICAgICNhZGRDb21tZW50ewogICAgICAgIGRpc3BsYXk6IGJsb2NrOwogICAgfQogICAgI3NlbmRCdG57CiAgICAgICAgcGFkZGluZzogNXB4OwogICAgICAgIG1hcmdpbi10b3A6IDVweDsKICAgIH0KfQo="},{"version":3,"sources":["AddComment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddComment.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"addComment\" @submit.prevent='addComment'>\n        <form action=\"post\">\n            <input type=\"text\" value=\"Commentaire\" name=\"comInput\" id=\"comInput\" v-model=\"comment\" required='true'>\n            <input type=\"submit\" placeholder=\"Ajouter un commentaire\" id=\"sendBtn\">\n        </form>\n    </div>\n</template>\n<script>\nexport default {\n    name: 'AddComment',\n    props: ['id'],\n    data(){\n        return{\n            comment: null,\n            token: null, \n            userId: null\n        }\n    },\n    created(){\n        this.getInfo()\n        console.log('created addcomment')\n    },\n    methods:{\n        async getInfo(){\n            this.token = localStorage.getItem('token');\n            this.userId = localStorage.getItem('userId');\n        },\n        async addComment(){\n            console.log('ajouter commentaire')\n            console.log(this.userId)\n            await fetch(\"http://localhost:3000/api/comment/createComment\",{\n                method: \"POST\",\n                headers: \n                {   \n                    'Content-Type': 'application/json',\n                    authorization : 'Bearer ' + this.token\n                },\n                body: JSON.stringify({\n                    comment: this.comment,\n                    userId: this.userId,\n                    postId: this.$store.state.postId\n                })\n            }).then(response => {\n                if(response.status == 401){\n                    alert(\"Commentaire vide\")\n                }\n                console.log(response)\n                })\n            .catch(err => {\n                console.log(err)\n            });\n            this.comment = null\n            this.$emit('commentsent', {\n                    message: 'nouveau post',\n                })\n        }\n    }\n}\n</script>\n<style lang=\"scss\" scoped>\n#addComment{\n    display: flex;\n    text-align: center;\n}\nform{\n    width: 100%;\n}\n#comInput{\n    width: 70%;\n    margin-right: 1rem;\n}\n#sendBtn{\n    width: fit-content;\n    border: none;\n    background-color: dodgerblue;\n    border-radius: 1rem;\n    color: white;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    padding: 7px;\n}\n@media screen and (min-width: 200px) and (max-width: 900px) {\n    #addComment{\n        display: block;\n    }\n    #sendBtn{\n        padding: 5px;\n        margin-top: 5px;\n    }\n}\n</style>"]}]}